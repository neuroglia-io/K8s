<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Neuroglia.K8s</name>
    </assembly>
    <members>
        <member name="T:Neuroglia.K8s.CustomResource`1">
            <summary>
            Represents an instance of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see>
            </summary>
            <typeparam name="TSpec">The type of the custom object's specification</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.CustomResource`1.#ctor(Neuroglia.K8s.ICustomResourceDefinition)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.CustomResource"/>
            </summary>
            <param name="definition">The <see cref="T:Neuroglia.K8s.CustomResource"/>'s definition</param>
        </member>
        <member name="P:Neuroglia.K8s.CustomResource`1.Spec">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.CustomResource`2">
            <summary>
            Represents an instance of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see>
            </summary>
            <typeparam name="TSpec">The type of the custom object's specification</typeparam>
            <typeparam name="TStatus">The type of the custom object's status</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.CustomResource`2.#ctor(Neuroglia.K8s.ICustomResourceDefinition)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.CustomResource"/>
            </summary>
            <param name="definition">The <see cref="T:Neuroglia.K8s.CustomResource"/>'s definition</param>
        </member>
        <member name="P:Neuroglia.K8s.CustomResource`2.Status">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.CustomResource">
            <summary>
            Represents an instance of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.CustomResource.#ctor(Neuroglia.K8s.ICustomResourceDefinition)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.CustomResource"/>
            </summary>
            <param name="definition">The <see cref="T:Neuroglia.K8s.CustomResource"/>'s definition</param>
        </member>
        <member name="P:Neuroglia.K8s.CustomResource.Definition">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.CustomResource.Metadata">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.CustomResource.Validate">
            <summary>
            Validates the <see cref="T:Neuroglia.K8s.CustomResource"/>
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.CustomResourceDefinition">
            <summary>
            Represents a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see>.
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.CustomResourceDefinition.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.CustomResourceDefinition"/>.
            </summary>
            <param name="apiVersion">The <see cref="T:Neuroglia.K8s.CustomResourceDefinition"/>'s api version.</param>
            <param name="kind">The <see cref="T:Neuroglia.K8s.CustomResourceDefinition"/>'s kind.</param>
            <param name="plural">The <see cref="T:Neuroglia.K8s.CustomResourceDefinition"/>'s plural name.</param>
        </member>
        <member name="P:Neuroglia.K8s.CustomResourceDefinition.ApiVersion">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.CustomResourceDefinition.Kind">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.CustomResourceDefinition.Plural">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.CustomResourceDefinition.Group">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.CustomResourceDefinition.Version">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.EventListener">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IEventListener"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.#ctor(Microsoft.Extensions.Logging.ILogger{Neuroglia.K8s.EventListener},k8s.IKubernetes,Neuroglia.K8s.EventListenerOptions)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.IEventListener"/>.
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="kubernetes">The service used to communicate with Kubernetes.</param>
            <param name="options">The options used to configure the <see cref="T:Neuroglia.K8s.EventListener"/></param>
        </member>
        <member name="P:Neuroglia.K8s.EventListener.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListener.Kubernetes">
            <summary>
            Gets the service used to communicate with the Kubernetes API
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListener.Options">
            <summary>
            Gets the options used to configure the <see cref="T:Neuroglia.K8s.EventListener"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListener.Subject">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.IEventListener"/>'s <see cref="T:System.Reactive.Subjects.Subject`1"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.Subscribe(System.IObserver{k8s.Models.Corev1Event})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.ExecuteAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.ListenAsync">
            <summary>
            Starts listening for Kubernetes <see cref="T:k8s.Models.Corev1Event"/>s
            </summary>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.OnNext(k8s.WatchEventType,k8s.Models.Corev1Event)">
            <summary>
            Handles resources events returned by the <see cref="T:k8s.IKubernetes"/> client
            </summary>
            <param name="type">The <see cref="T:k8s.WatchEventType"/></param>
            <param name="e">The watched <see cref="T:k8s.Models.Corev1Event"/></param>
        </member>
        <member name="M:Neuroglia.K8s.EventListener.OnError(System.Exception)">
            <summary>
            Handles <see cref="T:System.Exception"/>s thrown during the listening loop
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/> to handle</param>
        </member>
        <member name="T:Neuroglia.K8s.EventListenerFactory">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IEventListener"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.EventListenerFactory"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerFactory.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerFactory.Create(System.Action{Neuroglia.K8s.IEventListenerOptionsBuilder})">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.EventListenerOptions">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.K8s.IEventListener"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerOptions.Namespace">
            <summary>
            Gets the namespace in which to listen for <see cref="T:k8s.Models.Corev1Event"/>s
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerOptions.LabelSelector">
            <summary>
            Gets the label selector by which to filter the <see cref="T:k8s.Models.Corev1Event"/>s to listen for
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerOptions.FieldSelector">
            <summary>
            Gets the field selector by which to filter the <see cref="T:k8s.Models.Corev1Event"/>s to listen for
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerOptions.Predicate">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.EventListenerOptionsBuilder">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.#ctor(Neuroglia.K8s.EventListenerOptions)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.EventListenerOptionsBuilder"/>
            </summary>
            <param name="options">The <see cref="T:Neuroglia.K8s.EventListenerOptions"/> to configure</param>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.EventListenerOptionsBuilder"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.EventListenerOptionsBuilder.Options">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.EventListenerOptions"/> to configure
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.InCluster">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.InNamespace(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.WithLabel(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.WithField(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.When(System.Func{k8s.WatchEventType,k8s.Models.Corev1Event,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.EventListenerOptionsBuilder.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ICustomResource">
            <summary>
            Defines the fundamentals of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see> instance
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResource.Definition">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResource"/>'s definition
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.ICustomResource`1">
            <summary>
            Defines the fundamentals of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see> instance
            </summary>
            <typeparam name="TSpec">The type of the <see cref="T:Neuroglia.K8s.ICustomResource"/>'s specification</typeparam>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResource`1.Spec">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResource"/>'s specifications.
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.ICustomResource`2">
            <summary>
            Defines the fundamentals of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see> instance
            </summary>
            <typeparam name="TSpec">The type of the custom object's specification</typeparam>
            <typeparam name="TStatus">The type of the <see cref="T:Neuroglia.K8s.ICustomResource"/>'s status</typeparam>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResource`2.Status">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResource"/>'s status.<para></para>
            Note that the status sub resource must be enabled in the <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">CRD</see> 
            as described in the <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/#subresources">Kubernetes documentation</see>
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.ICustomResourceDefinition">
            <summary>
            Defines the fundamentals of a <see href="https://kubernetes.io/docs/tasks/extend-kubernetes/custom-resources/custom-resource-definitions/">Kubernetes Custom Resource Definition (CRD)</see>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResourceDefinition.ApiVersion">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/>'s api version
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResourceDefinition.Kind">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/>'s kind
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResourceDefinition.Plural">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/>'s plural name
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResourceDefinition.Group">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/>'s group
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ICustomResourceDefinition.Version">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/>'s version
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IEventListener">
            <summary>
            Defines the fundamentals of a service used to listen to Kubernetes <see cref="T:k8s.Models.Corev1Event"/>s
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IEventListenerFactory">
            <summary>
            Defines the fundamentals of a service used to create <see cref="T:Neuroglia.K8s.IEventListener"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerFactory.Create(System.Action{Neuroglia.K8s.IEventListenerOptionsBuilder})">
            <summary>
            Create a new <see cref="T:Neuroglia.K8s.IEventListener"/>
            </summary>
            <param name="configuration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IEventListener"/> to create</param>
            <returns>A new <see cref="T:Neuroglia.K8s.IEventListener"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IEventListenerOptionsBuilder">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:Neuroglia.K8s.IEventListener"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.InCluster">
            <summary>
            Configures the <see cref="T:Neuroglia.K8s.IEventListener"/> to watch for <see cref="T:k8s.Models.Corev1Event"/>s cluster-wide. Will ignore the namespace, if it has been set.
            </summary>
            <returns>The configured <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.InNamespace(System.String)">
            <summary>
            Sets the namespace in which to watch the <see cref="T:k8s.Models.Corev1Event"/>s. If the namespace is not set, the <see cref="T:Neuroglia.K8s.IEventListener"/> will watch for <see cref="T:k8s.Models.Corev1Event"/>s cluster-wide
            </summary>
            <param name="namespace">The namespace to watch the <see cref="T:k8s.Models.Corev1Event"/>s in</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.WithLabel(System.String)">
            <summary>
            Sets the label selector by which to filter the <see cref="T:k8s.Models.Corev1Event"/>s to watch
            </summary>
            <param name="selector">The label selector (ex: environment = production) to use</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.WithField(System.String)">
            <summary>
            Sets the field selector by which to filter the <see cref="T:k8s.Models.Corev1Event"/>s to watch
            </summary>
            <param name="selector">The field selector (ex: metadata.name) to use</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.When(System.Func{k8s.WatchEventType,k8s.Models.Corev1Event,System.Boolean})">
            <summary>
            Sets a predicate used to determine whether or not to handle the specified <see cref="T:k8s.Models.Corev1Event"/>'s <see cref="T:k8s.WatchEventType"/>
            </summary>
            <param name="predicate">A predicate <see cref="T:System.Func`3"/> used to determine whether or not to handle the specified <see cref="T:k8s.Models.Corev1Event"/>'s <see cref="T:k8s.WatchEventType"/></param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IEventListenerOptionsBuilder"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IEventListenerOptionsBuilder.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.K8s.EventListenerOptions"/>
            </summary>
            <returns>A new <see cref="T:Neuroglia.K8s.EventListenerOptions"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IKubernetesExtensions">
            <summary>
            Defines extensions for <see cref="T:k8s.IKubernetes"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.IKubernetesExtensions.CreateNamespacedCustomObjectAsync``1(k8s.IKubernetes,``0,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new namespaced custom object of the specified type
            </summary>
            <typeparam name="TResource">The type of custom object to create</typeparam>
            <param name="kubernetes">The extended <see cref="T:k8s.IKubernetes"/></param>
            <param name="resource">The resource to create</param>
            <param name="namespaceParameter">The namespace for which to create the specified custom object</param>
            <param name="pretty">A boolean indicating whether or not the resource should be pretty-printed</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The newly created resource</returns>
        </member>
        <member name="M:Neuroglia.K8s.IKubernetesExtensions.CreateClusterCustomObjectAsync``1(k8s.IKubernetes,``0,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Creates a new namespaced custom object of the specified type
            </summary>
            <typeparam name="TResource">The type of custom object to create</typeparam>
            <param name="kubernetes">The extended <see cref="T:k8s.IKubernetes"/></param>
            <param name="resource">The resource to create</param>
            <param name="pretty">A boolean indicating whether or not the resource should be pretty-printed</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>The newly created resource</returns>
        </member>
        <member name="M:Neuroglia.K8s.IKubernetesExtensions.ListNamespacedCustomObjectAsync``1(k8s.IKubernetes,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Lists namespaced custom objects
            </summary>
            <typeparam name="T">The type of custom resource to list</typeparam>
            <param name="kubernetes">The extended <see cref="T:k8s.IKubernetes"/></param>
            <param name="group">The custom resource's group name</param>
            <param name="version">The custom resource's version</param>
            <param name="namespaceParameter">The custom resource's namespace</param>
            <param name="plural">The custom resource's plural name. For TPRs this would be lowercase plural kind.</param>
            <param name="allowWatchBookmarks">resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versionsfor details. Defaults to unset</param>
            <param name="continueParameter">The continue option should be set when retrieving more results from the server.</param>
            <param name="fieldSelector">A selector to restrict the list of returned objects by their fields. Defaults to everything.</param>
            <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything.</param>
            <param name="limit">Limit is a maximum number of responses to return for a list call.</param>
            <param name="resourceVersion">When specified with a watch call, shows changes that occur after that particular version of a resource.</param>
            <param name="resourceVersionMatch">allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. 
            Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. 
            If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.</param>
            <param name="timeoutSeconds">Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.</param>
            <param name="watch"> Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.</param>
            <param name="pretty">A boolean indicating whether or not to pretty print the output</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:k8s.Models.KubernetesList`1"/> containing custom objects of the specified type</returns>
        </member>
        <member name="M:Neuroglia.K8s.IKubernetesExtensions.ListClusterCustomObjectAsync``1(k8s.IKubernetes,System.String,System.String,System.String,System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Lists cluster-wide custom objects
            </summary>
            <typeparam name="T">The type of custom resource to list</typeparam>
            <param name="kubernetes">The extended <see cref="T:k8s.IKubernetes"/></param>
            <param name="group">The custom resource's group name</param>
            <param name="version">The custom resource's version</param>
            <param name="plural">The custom resource's plural name. For TPRs this would be lowercase plural kind.</param>
            <param name="allowWatchBookmarks">resourceVersionMatch determines how resourceVersion is applied to list calls. It is highly recommended that resourceVersionMatch be set for list calls where resourceVersion is set See https://kubernetes.io/docs/reference/using-api/api-concepts/#resource-versionsfor details. Defaults to unset</param>
            <param name="continueParameter">The continue option should be set when retrieving more results from the server.</param>
            <param name="fieldSelector">A selector to restrict the list of returned objects by their fields. Defaults to everything.</param>
            <param name="labelSelector">A selector to restrict the list of returned objects by their labels. Defaults to everything.</param>
            <param name="limit">Limit is a maximum number of responses to return for a list call.</param>
            <param name="resourceVersion"> When specified with a watch call, shows changes that occur after that particular version of a resource.</param>
            <param name="resourceVersionMatch">allowWatchBookmarks requests watch events with type "BOOKMARK". Servers that do not implement bookmarks may ignore this flag and bookmarks are sent at the server's discretion. 
            Clients should not assume bookmarks are returned at any specific interval, nor may they assume the server will send any BOOKMARK event during a session. If this is not a watch, this field is ignored. 
            If the feature gate WatchBookmarks is not enabled in apiserver, this field is ignored.</param>
            <param name="timeoutSeconds">Timeout for the list/watch call. This limits the duration of the call, regardless of any activity or inactivity.</param>
            <param name="watch"> Watch for changes to the described resources and return them as a stream of add, update, and remove notifications.</param>
            <param name="pretty">A boolean indicating whether or not to pretty print the output</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new <see cref="T:k8s.Models.KubernetesList`1"/> containing custom objects of the specified type</returns>
        </member>
        <member name="T:Neuroglia.K8s.IResourceController">
            <summary>
            Defines the fundamentals of a service used to control <see cref="T:Neuroglia.K8s.ICustomResource"/>s
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceController.ResourceType">
            <summary>
            Gets the type of <see cref="T:Neuroglia.K8s.ICustomResource"/>s managed by the <see cref="T:Neuroglia.K8s.IResourceController"/>
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IResourceController`1">
            <summary>
            Defines the fundamentals of a service used to control <see cref="T:Neuroglia.K8s.ICustomResource"/>s
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/>s to control</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.IResourceController`1.ReconcileAsync(System.Threading.CancellationToken)">
            <summary>
            Reconciles the states of managed <see cref="T:Neuroglia.K8s.ICustomResource"/>s
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken"/></param>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IResourceControllerOptions`1">
            <summary>
            Defines the fundamentals of the options used to configure an <see cref="T:Neuroglia.K8s.IResourceController"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to manage</typeparam>
        </member>
        <member name="P:Neuroglia.K8s.IResourceControllerOptions`1.AutoReconcile">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:Neuroglia.K8s.IResourceController"/> to configure should automatically and periodically reconcile
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceControllerOptions`1.ReconciliationPeriod">
            <summary>
            Gets the <see cref="T:System.TimeSpan"/> that represents the period of time after which to reconcile the <see cref="T:Neuroglia.K8s.IResourceController"/> to configure
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceControllerOptions`1.WatchConfiguration">
            <summary>
            Gets an <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IResourceWatcher"/> used by the <see cref="T:Neuroglia.K8s.IResourceController"/> to configure
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:Neuroglia.K8s.IResourceControllerOptions`1"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/>s to manage</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.IResourceControllerOptionsBuilder`1.UseAutomaticReconciliation(System.Boolean)">
            <summary>
            Sets a boolean indicating whether or not to use automatic reconciliation
            </summary>
            <param name="enabled">A boolean indicating whether or not to use automatic reconciliation</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceControllerOptionsBuilder`1.ReconcileEvery(System.TimeSpan)">
            <summary>
            Sets the duration after which the <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/> will periodically auto-reconcile
            </summary>
            <param name="period">A <see cref="T:System.TimeSpan"/> representing the duration after which the <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/> will periodically auto-reconcile</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceControllerOptionsBuilder`1.ConfigureWatcher(System.Action{Neuroglia.K8s.IResourceWatcherOptionsBuilder{`0}})">
            <summary>
            Configures the <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/> used by the <see cref="T:Neuroglia.K8s.IResourceController`1"/> to configure
            </summary>
            <param name="watcherConfiguration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/> used by the <see cref="T:Neuroglia.K8s.IResourceController`1"/> to configure</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceControllerOptionsBuilder`1.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.K8s.IResourceControllerOptions`1"/>
            </summary>
            <returns>A new <see cref="T:Neuroglia.K8s.IResourceControllerOptions`1"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IResourceEvent`1">
            <summary>
            Defines the fundamentals of an event originating from a <see cref="T:Neuroglia.K8s.ICustomResource"/> of the specified type 
            </summary>
            <typeparam name="TResource">The type of the <see cref="T:Neuroglia.K8s.ICustomResource"/> the event concerns</typeparam>
        </member>
        <member name="P:Neuroglia.K8s.IResourceEvent`1.Type">
            <summary>
            Gets the event's type
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceEvent`1.Resource">
            <summary>
            Gets the custom resource that has produced the event
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IResourceWatcher">
            <summary>
            Defines the fundamentals of a service used to listen for Kubernetes events about a specified <see cref="T:Neuroglia.K8s.ICustomResource"/> type
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceWatcher.ResourceType">
            <summary>
            Gets the type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to listen Kubernetes events for
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.IResourceWatcher`1">
            <summary>
            Defines the fundamentals of a service used to listen for Kubernetes events about a specified <see cref="T:Neuroglia.K8s.ICustomResource"/> type
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to listen Kubernetes events for</typeparam>
        </member>
        <member name="T:Neuroglia.K8s.IResourceWatcherFactory">
            <summary>
            Defines the fundamentals of a service used to create <see cref="T:Neuroglia.K8s.IResourceWatcher"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherFactory.Create``1(System.Action{Neuroglia.K8s.IResourceWatcherOptionsBuilder{``0}})">
            <summary>
            Create a new <see cref="T:Neuroglia.K8s.IResourceWatcher"/> for the specified <see cref="T:Neuroglia.K8s.ICustomResource"/> type
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
            <param name="configuration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IResourceWatcher"/> to create</param>
            <returns>A new <see cref="T:Neuroglia.K8s.IResourceWatcher"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IResourceWatcherOptions`1">
            <summary>
            Defines the fundamentals of the options used to configure an <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
        </member>
        <member name="P:Neuroglia.K8s.IResourceWatcherOptions`1.Namespace">
            <summary>
            Gets the namespace in which to listen for <see cref="T:Neuroglia.K8s.ICustomResource"/>s
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceWatcherOptions`1.LabelSelector">
            <summary>
            Gets the label selector by which to filter the <see cref="T:Neuroglia.K8s.ICustomResource"/>s to watch
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceWatcherOptions`1.FieldSelector">
            <summary>
            Gets the field selector by which to filter the <see cref="T:Neuroglia.K8s.ICustomResource"/>s to watch
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.IResourceWatcherOptions`1.Predicate">
            <summary>
            Gets a predicate <see cref="T:System.Func`2"/> to determine whether or not to handle an event fired by the watched <see cref="T:Neuroglia.K8s.ICustomResource"/>
            </summary>
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1">
            <summary>
            Defines the fundamentals of a service used to build <see cref="T:Neuroglia.K8s.IResourceWatcherOptions`1"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.InCluster">
            <summary>
            Configures the <see cref="T:Neuroglia.K8s.IResourceWatcher"/> to watch for <see cref="T:Neuroglia.K8s.ICustomResource"/>s cluster-wide. Will ignore the namespace, if it has been set.
            </summary>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.InNamespace(System.String)">
            <summary>
            Sets the namespace in which to watch the <see cref="T:Neuroglia.K8s.ICustomResource"/>s. If the namespace is not set, the <see cref="T:Neuroglia.K8s.IResourceWatcher"/> will watch for <see cref="T:Neuroglia.K8s.ICustomResource"/>s cluster-wide
            </summary>
            <param name="namespace">The namespace to watch the <see cref="T:Neuroglia.K8s.ICustomResource"/>s in</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.WithLabel(System.String)">
            <summary>
            Sets the label selector by which to filter the <see cref="T:Neuroglia.K8s.ICustomResource"/>s to watch
            </summary>
            <param name="selector">The label selector (ex: environment = production) to use</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.WithField(System.String)">
            <summary>
            Sets the field selector by which to filter the <see cref="T:Neuroglia.K8s.ICustomResource"/>s to watch
            </summary>
            <param name="selector">The field selector (ex: metadata.name) to use</param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.When(System.Func{k8s.WatchEventType,`0,System.Boolean})">
            <summary>
            Sets a predicate used to determine whether or not to handle the specified <see cref="T:Neuroglia.K8s.ICustomResource"/>'s <see cref="T:k8s.WatchEventType"/>
            </summary>
            <param name="predicate">A predicate <see cref="T:System.Func`3"/> used to determine whether or not to handle the specified <see cref="T:Neuroglia.K8s.ICustomResource"/>'s <see cref="T:k8s.WatchEventType"/></param>
            <returns>The configured <see cref="T:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IResourceWatcherOptionsBuilder`1.Build">
            <summary>
            Builds the <see cref="T:Neuroglia.K8s.IResourceWatcherOptions`1"/>
            </summary>
            <returns>A new <see cref="T:Neuroglia.K8s.IResourceWatcherOptions`1"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.IServiceCollectionExtensions">
            <summary>
            Defines extensions for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/>s
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddKubernetesClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,k8s.KubernetesClientConfiguration)">
            <summary>
            Adds and configures an <see cref="T:k8s.IKubernetes"/> service
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configuration">The <see cref="T:k8s.KubernetesClientConfiguration"/> to use</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddKubernetesClient(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds <see cref="T:k8s.IKubernetes"/> service with an <see cref="M:k8s.KubernetesClientConfiguration.InClusterConfig"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddResourceWatcherFactory``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a <see cref="T:Neuroglia.K8s.IResourceWatcherFactory"/>
            </summary>
            <typeparam name="TFactory">The type of the <see cref="T:Neuroglia.K8s.IResourceWatcherFactory"/> to add</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddResourceWatcherFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the default <see cref="T:Neuroglia.K8s.IResourceWatcherFactory"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddResourceWatcher``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.K8s.IResourceWatcherOptionsBuilder{``0}})">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configuration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IResourceWatcher"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddResourceController``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.K8s.IResourceControllerOptionsBuilder{``1}})">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.K8s.IResourceController`1"/>
            </summary>
            <typeparam name="TController">The type of the <see cref="T:Neuroglia.K8s.IResourceController`1"/> implementation to add</typeparam>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to manage</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configuration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IResourceController"/> to add</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddResourceController``2(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.K8s.IResourceController`1"/>
            </summary>
            <typeparam name="TController">The type of the <see cref="T:Neuroglia.K8s.IResourceController`1"/> implementation to add</typeparam>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to manage</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddEventListenerFactory``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds a <see cref="T:Neuroglia.K8s.IEventListenerFactory"/>
            </summary>
            <typeparam name="TFactory">The type of the <see cref="T:Neuroglia.K8s.IEventListenerFactory"/> to add</typeparam>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddEventListenerFactory(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Adds the default <see cref="T:Neuroglia.K8s.IEventListenerFactory"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.IServiceCollectionExtensions.AddEventListener(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Neuroglia.K8s.IEventListenerOptionsBuilder})">
            <summary>
            Adds and configures a new <see cref="T:Neuroglia.K8s.IEventListener"/>
            </summary>
            <param name="services">The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to configure</param>
            <param name="configuration">An <see cref="T:System.Action`1"/> used to configure the <see cref="T:Neuroglia.K8s.IEventListener"/></param>
            <returns>The configured <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/></returns>
        </member>
        <member name="T:Neuroglia.K8s.KubernetesDefaults">
            <summary>
            Exposes Kubernetes defaults 
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.KubernetesDefaults.ApiVersions">
            <summary>
            Exposes default Kubernetes API versions
            </summary>
        </member>
        <member name="F:Neuroglia.K8s.KubernetesDefaults.ApiVersions.V1">
            <summary>
            Gets the 'v1' API version
            </summary>
        </member>
        <member name="F:Neuroglia.K8s.KubernetesDefaults.ApiVersions.AppsV1">
            <summary>
            Gets the 'apps/v1' API version
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.KubernetesDefaults.Kinds">
            <summary>
            Exposes constants about Kubernetes default Kinds
            </summary>
        </member>
        <member name="F:Neuroglia.K8s.KubernetesDefaults.Kinds.Deployment">
            <summary>
            Gets the kind of the 'Deployment' object
            </summary>
        </member>
        <member name="F:Neuroglia.K8s.KubernetesDefaults.Kinds.Service">
            <summary>
            Gets the kind of the 'Service' object
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.KubernetesDefaults.ServiceTypes">
            <summary>
            Exposes default Kubernetes service types
            </summary>
        </member>
        <member name="F:Neuroglia.K8s.KubernetesDefaults.ServiceTypes.ExternalName">
            <summary>
            Gets the 'ExternalName' service type
            </summary>
        </member>
        <member name="T:Neuroglia.K8s.ResourceController`1">
            <summary>
            Represents the default base class for all <see cref="T:Neuroglia.K8s.IResourceController"/> implementations
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,k8s.IKubernetes,Neuroglia.K8s.IResourceWatcherFactory,Microsoft.Extensions.Options.IOptions{Neuroglia.K8s.ResourceControllerOptions{`0}})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceController`1"/>
            </summary>
            <param name="loggerFactory">The service used to create <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s</param>
            <param name="kubernetes">The Kubernets API client service</param>
            <param name="resourceWatcherFactory">The service used to create <see cref="T:Neuroglia.K8s.IResourceWatcherFactory"/> instances</param>
            <param name="options">The service used to retrieve the <see cref="T:Neuroglia.K8s.ResourceController`1"/>'s <see cref="T:Neuroglia.K8s.ResourceControllerOptions`1"/></param>
        </member>
        <member name="P:Neuroglia.K8s.ResourceController`1.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceController`1.Kubernetes">
            <summary>
            Gets the Kubernets API client service
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceController`1.ResourceWatcher">
            <summary>
            Gets the service used to watch <see cref="T:Neuroglia.K8s.ICustomResource"/>s of the specified type
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceController`1.ResourceDefinition">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/> of the controlled <see cref="T:Neuroglia.K8s.ICustomResource"/> type
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceController`1.Options">
            <summary>
            Gets the options used to configure the <see cref="T:Neuroglia.K8s.ResourceController`1"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.ReconcileAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.OnEvent(Neuroglia.K8s.IResourceEvent{`0})">
            <summary>
            Handles the specified <see cref="T:Neuroglia.K8s.IResourceEvent`1"/>
            </summary>
            <param name="e">The <see cref="T:Neuroglia.K8s.IResourceEvent`1"/> to handle</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.OnError(System.Exception)">
            <summary>
            Handles an <see cref="T:System.Exception"/> that has occured while watching the <see cref="T:Neuroglia.K8s.ICustomResource"/>s of the specified type
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/></param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.OnCompleted">
            <summary>
            Handles the completion of the subscription's stream
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="T:Neuroglia.K8s.IResourceController"/>
            </summary>
            <param name="disposing">A boolean indicating whether or not the <see cref="T:Neuroglia.K8s.IResourceController"/> is being disposed of</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceController`1.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceControllerOptions`1">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.K8s.IResourceController"/>
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to manage</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptions`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceControllerOptions`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceControllerOptions`1.AutoReconcile">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceControllerOptions`1.ReconciliationPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceControllerOptions`1.WatchConfiguration">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceControllerOptionsBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/> interface
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to manage</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.#ctor(Neuroglia.K8s.ResourceControllerOptions{`0})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceControllerOptionsBuilder`1"/>
            </summary>
            <param name="options">The <see cref="T:Neuroglia.K8s.ResourceControllerOptions`1"/> to configure</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceControllerOptionsBuilder`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.Options">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.IResourceControllerOptions`1"/> to configure
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.UseAutomaticReconciliation(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.ReconcileEvery(System.TimeSpan)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.ConfigureWatcher(System.Action{Neuroglia.K8s.IResourceWatcherOptionsBuilder{`0}})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceControllerOptionsBuilder`1.Build">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceEvent`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IResourceEvent`1"/> interface
            </summary>
            <typeparam name="TResource">The type of the custom resource the event concerns</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceEvent`1.#ctor(k8s.WatchEventType,`0)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceEvent`1"/>
            </summary>
            <param name="type">The event's type</param>
            <param name="resource">The custom resource that has produced the event</param>
        </member>
        <member name="P:Neuroglia.K8s.ResourceEvent`1.Type">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceEvent`1.Resource">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceWatcher`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/> interface.
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to listen the Kubernetes events for.</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.#ctor(Microsoft.Extensions.Logging.ILogger{Neuroglia.K8s.ResourceWatcher{`0}},k8s.IKubernetes,Neuroglia.K8s.ResourceWatcherOptions{`0})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.IResourceWatcher`1"/>.
            </summary>
            <param name="logger">The service used to perform logging</param>
            <param name="kubernetes">The service used to communicate with Kubernetes.</param>
            <param name="options">The current <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/></param>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcher`1.Logger">
            <summary>
            Gets the service used to perform logging
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcher`1.Kubernetes">
            <summary>
            Gets the service used to communicate with Kubernetes
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcher`1.ResourceDefinition">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ICustomResourceDefinition"/> of the <see cref="T:Neuroglia.K8s.ICustomResource"/> type to to listen the Kubernetes events for.
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcher`1.Options">
            <summary>
            Gets the current <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcher`1.Subject">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.IResourceEvent`1"/> <see cref="T:System.Reactive.Subjects.Subject`1"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.StartAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.ListenAsync">
            <summary>
            Starts listening for Kubernetes events concerning the specified <see cref="T:Neuroglia.K8s.ICustomResource"/> type
            </summary>
            <returns>A new awaitable <see cref="T:System.Threading.Tasks.Task"/></returns>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.StopAsync(System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.Subscribe(System.IObserver{Neuroglia.K8s.IResourceEvent{`0}})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.OnNext(k8s.WatchEventType,`0)">
            <summary>
            Handles resources events returned by the <see cref="T:k8s.IKubernetes"/> client
            </summary>
            <param name="type">The <see cref="T:k8s.WatchEventType"/></param>
            <param name="resource">The watched <see cref="T:Neuroglia.K8s.ICustomResource"/></param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.OnError(System.Exception)">
            <summary>
            Handles <see cref="T:System.Exception"/>s thrown during the listening loop
            </summary>
            <param name="ex">The <see cref="T:System.Exception"/> to handle</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.Dispose(System.Boolean)">
            <summary>
            Disposes of the <see cref="T:Neuroglia.K8s.ResourceWatcher`1"/>
            </summary>
            <param name="disposing">A boolean indicating whether or not the <see cref="T:Neuroglia.K8s.ResourceWatcher`1"/> is being disposed of</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcher`1.DisposeAsync">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceWatcherFactory">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IResourceWatcherFactory"/> interface
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherFactory.#ctor(System.IServiceProvider)">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceWatcherFactory"/>
            </summary>
            <param name="serviceProvider">The current <see cref="T:System.IServiceProvider"/></param>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherFactory.ServiceProvider">
            <summary>
            Gets the current <see cref="T:System.IServiceProvider"/>
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherFactory.Create``1(System.Action{Neuroglia.K8s.IResourceWatcherOptionsBuilder{``0}})">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceWatcherOptions`1">
            <summary>
            Represents the options used to configure an <see cref="T:Neuroglia.K8s.IResourceWatcher"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherOptions`1.Namespace">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherOptions`1.LabelSelector">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherOptions`1.FieldSelector">
            <inheritdoc/>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherOptions`1.Predicate">
            <inheritdoc/>
        </member>
        <member name="T:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1">
            <summary>
            Represents the default implementation of the <see cref="T:Neuroglia.K8s.IResourceControllerOptionsBuilder`1"/> interface
            </summary>
            <typeparam name="TResource">The type of <see cref="T:Neuroglia.K8s.ICustomResource"/> to watch</typeparam>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.#ctor(Neuroglia.K8s.ResourceWatcherOptions{`0})">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/>
            </summary>
            <param name="options">The <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/> to configure</param>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.#ctor">
            <summary>
            Initializes a new <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/>
            </summary>
        </member>
        <member name="P:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.Options">
            <summary>
            Gets the <see cref="T:Neuroglia.K8s.ResourceWatcherOptions`1"/> to configure
            </summary>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.InCluster">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.InNamespace(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.WithLabel(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.WithField(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.When(System.Func{k8s.WatchEventType,`0,System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Neuroglia.K8s.ResourceWatcherOptionsBuilder`1.Build">
            <inheritdoc/>
        </member>
    </members>
</doc>
